(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{479:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/cabana-react/build/index.js\nvar build = __webpack_require__(4);\n\n// EXTERNAL MODULE: ./node_modules/@mdx-js/tag/dist/index.js\nvar dist = __webpack_require__(212);\n\n// EXTERNAL MODULE: ./node_modules/cabanaico/dist-es5/index.js\nvar dist_es5 = __webpack_require__(17);\n\n// CONCATENATED MODULE: ./src/docs/Button.mdx\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\nvar primaryProps = {\n  bg: \'primary\',\n  color: \'white\',\n  mr: 1\n};\n\nvar Button_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    _classCallCheck(this, MDXContent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  _createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = _objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Buttons"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Buttons"), react_default.a.createElement(dist["MDXTag"], {\n        name: "h2",\n        components: components\n      }, "Small"), react_default.a.createElement(build["ButtonSmall"], primaryProps, "Button"), react_default.a.createElement(build["ButtonSmall"], primaryProps, react_default.a.createElement(dist_es5["IconHeart"], null), " Button"), react_default.a.createElement(build["ButtonSmall"], primaryProps, "Button ", react_default.a.createElement(dist_es5["IconHeart"], null)), react_default.a.createElement(dist["MDXTag"], {\n        name: "h2",\n        components: components\n      }, "Normal"), react_default.a.createElement(build["Button"], primaryProps, "Button"), react_default.a.createElement(build["Button"], primaryProps, react_default.a.createElement(dist_es5["IconHeart"], null), " Button"), react_default.a.createElement(build["Button"], primaryProps, "Button ", react_default.a.createElement(dist_es5["IconHeart"], null)), react_default.a.createElement(dist["MDXTag"], {\n        name: "h2",\n        components: components\n      }, "Large"), react_default.a.createElement(build["ButtonLarge"], _extends({}, primaryProps, {\n        fontWeight: "bold"\n      }), "Button"), react_default.a.createElement(build["ButtonLarge"], _extends({}, primaryProps, {\n        fontWeight: "bold"\n      }), react_default.a.createElement(dist_es5["IconHeart"], null), " Button"), react_default.a.createElement(build["ButtonLarge"], _extends({}, primaryProps, {\n        fontWeight: "bold"\n      }), "Button ", react_default.a.createElement(dist_es5["IconHeart"], null)), react_default.a.createElement(dist["MDXTag"], {\n        name: "h2",\n        components: components\n      }, "Colourful"), react_default.a.createElement(build["ButtonSmall"], {\n        bg: "error",\n        borderRadius: "large",\n        color: "white"\n      }, "Button"), react_default.a.createElement(build["Button"], {\n        bg: "success",\n        color: "error"\n      }, react_default.a.createElement(dist_es5["IconHeart"], null), " Button"), react_default.a.createElement(build["ButtonLarge"], {\n        bg: "tertiary",\n        color: "warning"\n      }, react_default.a.createElement(dist_es5["IconHeart"], null), " Button"));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Card.mdx\nfunction Card_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Card_typeof = function _typeof(obj) { return typeof obj; }; } else { Card_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Card_typeof(obj); }\n\nfunction Card_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Card_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Card_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Card_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Card_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Card_createClass(Constructor, protoProps, staticProps) { if (protoProps) Card_defineProperties(Constructor.prototype, protoProps); if (staticProps) Card_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Card_possibleConstructorReturn(self, call) { if (call && (Card_typeof(call) === "object" || typeof call === "function")) { return call; } return Card_assertThisInitialized(self); }\n\nfunction Card_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Card_getPrototypeOf(o) { Card_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Card_getPrototypeOf(o); }\n\nfunction Card_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Card_setPrototypeOf(subClass, superClass); }\n\nfunction Card_setPrototypeOf(o, p) { Card_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Card_setPrototypeOf(o, p); }\n\n\n\n\n\nvar SampleBodyText = "Hey there! I\'m Tom. A singer, who\'s well known for my various awesome jams, and other amazing thangs.";\n\nvar Card_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Card_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Card_classCallCheck(this, MDXContent);\n\n    _this = Card_possibleConstructorReturn(this, Card_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Card_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Card_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Cards"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Cards"), react_default.a.createElement("div", {\n        style: {\n          maxWidth: 1024,\n          display: \'grid\',\n          gridTemplateColumns: \'1fr 1fr 1fr\',\n          gridColumnGap: 10,\n          gridRowGap: 30,\n          alignItems: \'start\'\n        }\n      }, react_default.a.createElement(build["Card"], {\n        is: "article",\n        textAlign: "center"\n      }, react_default.a.createElement(build["CardImage"], null), react_default.a.createElement(build["CardTitle"], null, "Tom Jones"), react_default.a.createElement(build["CardBodyText"], {\n        mb: 4,\n        display: "inline-block"\n      }, SampleBodyText), react_default.a.createElement(build["Button"], {\n        bg: "primary",\n        color: "white",\n        borderRadius: "large"\n      }, react_default.a.createElement(dist_es5["IconHeart"], null), "Follow me on Twitter")), react_default.a.createElement(build["Card"], {\n        is: "article",\n        textAlign: "center"\n      }, react_default.a.createElement(build["CardImage"], {\n        height: "240px"\n      }), react_default.a.createElement(build["CardTitle"], null, "Tom Jones"), react_default.a.createElement(build["CardBodyText"], {\n        mb: 4,\n        display: "inline-block"\n      }, SampleBodyText), react_default.a.createElement(build["Button"], {\n        bg: "primary",\n        color: "white"\n      }, "View Full Profile")), react_default.a.createElement(build["Card"], {\n        is: "article"\n      }, react_default.a.createElement(build["CardImage"], null), react_default.a.createElement(build["CardTitle"], null, "Tom Jones"), react_default.a.createElement(build["CardBodyText"], null, SampleBodyText), react_default.a.createElement(build["CardFooter"], null, react_default.a.createElement(build["TinyText"], {\n        color: "grey"\n      }, "23 Friends"))), react_default.a.createElement(build["Card"], {\n        is: "article",\n        p: 8\n      }, react_default.a.createElement(build["CardTitle"], null, "More Padding"), react_default.a.createElement(build["CardBodyText"], null, SampleBodyText)), react_default.a.createElement(build["Card"], {\n        is: "article",\n        bg: "secondary",\n        borderRadius: "small",\n        boxShadow: 60\n      }, react_default.a.createElement(build["CardTitle"], {\n        color: "warning",\n        fontWeight: "normal"\n      }, "Fancy secondary one"), react_default.a.createElement(build["CardBodyText"], {\n        color: "white"\n      }, " ", SampleBodyText)), react_default.a.createElement(build["Card"], {\n        is: "article",\n        borderRadius: "small",\n        boxShadow: 60\n      }, react_default.a.createElement(build["CardTitle"], {\n        color: "success",\n        fontWeight: "normal",\n        mb: 0\n      }, "Success!"))));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Forms/Checkbox.js\nfunction Checkbox_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Checkbox_typeof = function _typeof(obj) { return typeof obj; }; } else { Checkbox_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Checkbox_typeof(obj); }\n\nfunction Checkbox_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Checkbox_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Checkbox_createClass(Constructor, protoProps, staticProps) { if (protoProps) Checkbox_defineProperties(Constructor.prototype, protoProps); if (staticProps) Checkbox_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Checkbox_possibleConstructorReturn(self, call) { if (call && (Checkbox_typeof(call) === "object" || typeof call === "function")) { return call; } return Checkbox_assertThisInitialized(self); }\n\nfunction Checkbox_getPrototypeOf(o) { Checkbox_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Checkbox_getPrototypeOf(o); }\n\nfunction Checkbox_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Checkbox_setPrototypeOf(subClass, superClass); }\n\nfunction Checkbox_setPrototypeOf(o, p) { Checkbox_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Checkbox_setPrototypeOf(o, p); }\n\nfunction Checkbox_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\n\n\n\nvar Checkbox_StatefulCheckbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Checkbox_inherits(StatefulCheckbox, _React$Component);\n\n  function StatefulCheckbox() {\n    var _this;\n\n    Checkbox_classCallCheck(this, StatefulCheckbox);\n\n    _this = Checkbox_possibleConstructorReturn(this, Checkbox_getPrototypeOf(StatefulCheckbox).call(this));\n    _this.state = {\n      checked: false\n    };\n    _this.handleChange = _this.handleChange.bind(Checkbox_assertThisInitialized(Checkbox_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  Checkbox_createClass(StatefulCheckbox, [{\n    key: "handleChange",\n    value: function handleChange() {\n      this.setState({\n        checked: !this.state.checked\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          label = _this$props.label,\n          value = _this$props.value,\n          disabled = _this$props.disabled;\n      return react_default.a.createElement(build["Checkbox"], {\n        disabled: disabled,\n        value: value,\n        label: label,\n        checked: this.state.checked,\n        onChange: this.handleChange,\n        py: 1\n      });\n    }\n  }]);\n\n  return StatefulCheckbox;\n}(react_default.a.Component);\n\nvar Checkbox_Checkboxes = function Checkboxes() {\n  return react_default.a.createElement(build["Box"], {\n    display: "grid",\n    style: {\n      gridTemplateColumns: \'1fr\',\n      alignItems: \'center\'\n    }\n  }, react_default.a.createElement(Checkbox_StatefulCheckbox, {\n    value: "jar_jar",\n    label: "Jar Jar Binks"\n  }), react_default.a.createElement(Checkbox_StatefulCheckbox, {\n    value: "queen_amidala",\n    label: "Queen Amidala"\n  }), react_default.a.createElement(Checkbox_StatefulCheckbox, {\n    disabled: true,\n    value: "mon_mothma",\n    label: "Mon Mothma"\n  }));\n};\n\n/* harmony default export */ var Checkbox = (Checkbox_Checkboxes);\n// CONCATENATED MODULE: ./src/docs/Forms/Radio.js\nfunction Radio_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Radio_typeof = function _typeof(obj) { return typeof obj; }; } else { Radio_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Radio_typeof(obj); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction Radio_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Radio_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Radio_createClass(Constructor, protoProps, staticProps) { if (protoProps) Radio_defineProperties(Constructor.prototype, protoProps); if (staticProps) Radio_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Radio_possibleConstructorReturn(self, call) { if (call && (Radio_typeof(call) === "object" || typeof call === "function")) { return call; } return Radio_assertThisInitialized(self); }\n\nfunction Radio_getPrototypeOf(o) { Radio_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Radio_getPrototypeOf(o); }\n\nfunction Radio_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Radio_setPrototypeOf(subClass, superClass); }\n\nfunction Radio_setPrototypeOf(o, p) { Radio_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Radio_setPrototypeOf(o, p); }\n\nfunction Radio_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\n\n\n\nvar Radio_StatefulRadioButtons =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Radio_inherits(StatefulRadioButtons, _React$Component);\n\n  function StatefulRadioButtons() {\n    var _this;\n\n    Radio_classCallCheck(this, StatefulRadioButtons);\n\n    _this = Radio_possibleConstructorReturn(this, Radio_getPrototypeOf(StatefulRadioButtons).call(this));\n    _this.state = {\n      selected: \'anakin_skywalker\'\n    };\n    _this.handleChange = _this.handleChange.bind(Radio_assertThisInitialized(Radio_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  Radio_createClass(StatefulRadioButtons, [{\n    key: "handleChange",\n    value: function handleChange(event) {\n      this.setState({\n        selected: event.target.value\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var _React$createElement;\n\n      return react_default.a.createElement(build["Box"], {\n        display: "grid",\n        style: {\n          gridTemplateColumns: \'1fr\',\n          alignItems: \'center\'\n        }\n      }, react_default.a.createElement(build["Radio"], {\n        value: "obi_wan",\n        label: "Obi Wan Kenobi",\n        checked: this.state.selected === \'obi_wan\',\n        onChange: this.handleChange,\n        py: 1\n      }), react_default.a.createElement(build["Radio"], {\n        value: "han_solo",\n        label: "Han Solo",\n        checked: this.state.selected === \'han_solo\',\n        onChange: this.handleChange,\n        py: 1\n      }), react_default.a.createElement(build["Radio"], (_React$createElement = {\n        value: "anakin_skywalker",\n        label: "Anakin Skywalker",\n        checked: true,\n        disabled: true\n      }, _defineProperty(_React$createElement, "checked", this.state.selected === \'anakin_skywalker\'), _defineProperty(_React$createElement, "onChange", this.handleChange), _defineProperty(_React$createElement, "py", 1), _React$createElement)));\n    }\n  }]);\n\n  return StatefulRadioButtons;\n}(react_default.a.Component);\n\n/* harmony default export */ var Radio = (Radio_StatefulRadioButtons);\n// CONCATENATED MODULE: ./src/docs/Forms/index.mdx\nfunction Forms_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Forms_typeof = function _typeof(obj) { return typeof obj; }; } else { Forms_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Forms_typeof(obj); }\n\nfunction Forms_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Forms_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Forms_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Forms_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Forms_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Forms_createClass(Constructor, protoProps, staticProps) { if (protoProps) Forms_defineProperties(Constructor.prototype, protoProps); if (staticProps) Forms_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Forms_possibleConstructorReturn(self, call) { if (call && (Forms_typeof(call) === "object" || typeof call === "function")) { return call; } return Forms_assertThisInitialized(self); }\n\nfunction Forms_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Forms_getPrototypeOf(o) { Forms_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Forms_getPrototypeOf(o); }\n\nfunction Forms_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Forms_setPrototypeOf(subClass, superClass); }\n\nfunction Forms_setPrototypeOf(o, p) { Forms_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Forms_setPrototypeOf(o, p); }\n\n\n\n\n\n\n\nvar Forms_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Forms_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Forms_classCallCheck(this, MDXContent);\n\n    _this = Forms_possibleConstructorReturn(this, Forms_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Forms_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Forms_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Forms"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Forms"), react_default.a.createElement(dist["MDXTag"], {\n        name: "h2",\n        components: components\n      }, "Todo:"), react_default.a.createElement("ul", null, react_default.a.createElement("li", null, "Inputs with icons left and right"), react_default.a.createElement("li", null, "Textarea"), react_default.a.createElement("li", null, "Toggle switch")), react_default.a.createElement(build["HeadingFive"], null, "Text Inputs"), react_default.a.createElement(build["Box"], {\n        display: "grid",\n        style: {\n          gridTemplateColumns: \'1fr 1fr 1fr 1fr\',\n          gridColumnGap: 16,\n          gridRowGap: 16,\n          alignItems: \'center\'\n        }\n      }, react_default.a.createElement(build["TextInput"], {\n        placeholder: "Default"\n      }), react_default.a.createElement(build["TextInput"], {\n        borderColor: "primary",\n        placeholder: "Active"\n      }), react_default.a.createElement(build["TextInput"], {\n        borderColor: "success",\n        defaultValue: "Success"\n      }), react_default.a.createElement(build["TextInput"], {\n        borderColor: "error",\n        color: "error",\n        defaultValue: "Error"\n      }), react_default.a.createElement(build["TextInput"], {\n        borderColor: "error",\n        disabled: true\n      }), react_default.a.createElement(build["TextInput"], {\n        borderRadius: "large",\n        placeholder: "Large border radius"\n      }), react_default.a.createElement(build["TextInput"], {\n        borderRadius: "none",\n        placeholder: "No border radius"\n      }), react_default.a.createElement(build["TextInput"], {\n        borderRadius: "none"\n      }), react_default.a.createElement("div", null, react_default.a.createElement(build["FormLabel"], {\n        htmlFor: "textInput"\n      }, "First Name"), react_default.a.createElement(build["TextInput"], {\n        borderColor: "error",\n        name: "textInput"\n      }), react_default.a.createElement(build["ValidationLabel"], null, "This is a required field")), react_default.a.createElement("div", null, react_default.a.createElement(build["FormLabel"], {\n        htmlFor: "textInput2"\n      }, "Phone Number"), react_default.a.createElement(build["TextInput"], {\n        borderColor: "success",\n        name: "textInput2",\n        defaultValue: "(015) 2323 2320"\n      }), react_default.a.createElement(build["ValidationLabel"], {\n        color: "success"\n      }, "Verified"))), react_default.a.createElement(build["Box"], {\n        display: "grid",\n        style: {\n          gridTemplateColumns: \'1fr 1fr 1fr 1fr\',\n          gridColumnGap: 16,\n          gridRowGap: 16,\n          alignItems: \'center\',\n          marginTop: 32\n        }\n      }, react_default.a.createElement("div", null, react_default.a.createElement(build["HeadingFive"], null, "Radio Buttons"), react_default.a.createElement(Radio, null)), react_default.a.createElement("div", null, react_default.a.createElement(build["HeadingFive"], null, "Checkboxes"), react_default.a.createElement(Checkbox, null))));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Icon.mdx\nfunction Icon_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Icon_typeof = function _typeof(obj) { return typeof obj; }; } else { Icon_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Icon_typeof(obj); }\n\nfunction Icon_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Icon_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Icon_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Icon_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Icon_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Icon_createClass(Constructor, protoProps, staticProps) { if (protoProps) Icon_defineProperties(Constructor.prototype, protoProps); if (staticProps) Icon_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Icon_possibleConstructorReturn(self, call) { if (call && (Icon_typeof(call) === "object" || typeof call === "function")) { return call; } return Icon_assertThisInitialized(self); }\n\nfunction Icon_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Icon_getPrototypeOf(o) { Icon_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Icon_getPrototypeOf(o); }\n\nfunction Icon_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Icon_setPrototypeOf(subClass, superClass); }\n\nfunction Icon_setPrototypeOf(o, p) { Icon_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Icon_setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar Icon_Icons = function Icons() {\n  return react_default.a.createElement(build["Box"], {\n    fontSize: "lead",\n    display: "grid",\n    color: "darkGrey",\n    style: {\n      gridTemplateRows: \'repeat(10, 1fr)\',\n      gridTemplateColumns: \'repeat(10, 1fr)\',\n      gap: \'20px\'\n    }\n  }, Object.keys(dist_es5).map(function (key) {\n    var Icon = dist_es5[key];\n    return react_default.a.createElement(Icon, {\n      key: key\n    });\n  }));\n};\n\nvar Icon_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Icon_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Icon_classCallCheck(this, MDXContent);\n\n    _this = Icon_possibleConstructorReturn(this, Icon_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Icon_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Icon_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Icons"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Icons"), react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, "Cabana uses the ", react_default.a.createElement(dist["MDXTag"], {\n        name: "a",\n        components: components,\n        parentName: "p",\n        props: {\n          "href": "https://github.com/lucastobrazil/cabanaico"\n        }\n      }, "cabanaico"), " library."), react_default.a.createElement(Icon_Icons, null));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// EXTERNAL MODULE: ./node_modules/styled-system/dist/index.esm.js + 1 modules\nvar index_esm = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js\nvar styled_components_browser_esm = __webpack_require__(5);\n\n// EXTERNAL MODULE: ./node_modules/react-router-hash-link/lib/index.js\nvar lib = __webpack_require__(213);\n\n// CONCATENATED MODULE: ./src/services/index.js\nvar makeHashLink = function makeHashLink(title) {\n  return title.split(\' \').join(\'\');\n};\n// CONCATENATED MODULE: ./src/components/DocsNav.js\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral(["\\n  list-style-type: none;\\n  ", ";\\n  ", ";\\n  ", ";\\n  ", ";\\n  a {\\n    ", ";\\n    color: inherit;\\n    text-decoration: none;\\n    display: block;\\n\\n    &:hover {\\n      color: black;\\n      background-color: rgba(0, 0, 0, 0.1);\\n    }\\n  }\\n"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral(["\\n  ", ";\\n  padding: 0;\\n  ", ";\\n"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n\n\n\n\n\n\nvar List = styled_components_browser_esm["default"].ul(_templateObject(), index_esm["fontFamily"], index_esm["space"]);\nvar ListItem = styled_components_browser_esm["default"].li(_templateObject2(), index_esm["fontWeight"], index_esm["borderBottom"], index_esm["borderColor"], index_esm["color"], index_esm["space"]);\nListItem.defaultProps = {\n  p: 1\n};\nvar items = [\'Avatars\', \'Buttons\', \'Cards\', \'Chips\', \'Forms\', \'Icons\', \'Notification Bar\', \'Pagination\', \'Progress Bar\', \'Tabs\', \'Tags\', \'Text\', \'Tooltips\'];\nvar todoItems = [\'DatePickers\', \'Dropdowns\', \'Map\', \'Menus\', \'Modal\', \'Sliders\', \'Tables\', \'Video Player\'];\nfunction DocsNav() {\n  return react_default.a.createElement(build["Box"], {\n    position: "fixed",\n    width: 246,\n    pt: 2,\n    mr: 2,\n    height: "100%",\n    css: "overflow: auto"\n  }, react_default.a.createElement(build["CaptionText"], {\n    fontWeight: "bold",\n    px: 1,\n    color: "lightGrey"\n  }, "Components"), react_default.a.createElement(List, {\n    fontFamily: "default",\n    m: 0\n  }, items.map(function (item) {\n    return react_default.a.createElement(ListItem, {\n      key: item,\n      color: "grey"\n    }, react_default.a.createElement(lib["HashLink"], {\n      to: "#".concat(makeHashLink(item))\n    }, item));\n  })), react_default.a.createElement(List, {\n    fontFamily: "default",\n    m: 0,\n    mt: 2\n  }, react_default.a.createElement(build["CaptionText"], {\n    fontWeight: "bold",\n    px: 1,\n    color: "grey"\n  }, "Not yet done:"), todoItems.map(function (item) {\n    return react_default.a.createElement(ListItem, {\n      key: item,\n      color: "grey"\n    }, react_default.a.createElement(lib["HashLink"], {\n      to: "#".concat(makeHashLink(item))\n    }, item));\n  })));\n}\n// CONCATENATED MODULE: ./src/docs/NotificationBar.mdx\nfunction NotificationBar_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { NotificationBar_typeof = function _typeof(obj) { return typeof obj; }; } else { NotificationBar_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return NotificationBar_typeof(obj); }\n\nfunction NotificationBar_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = NotificationBar_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction NotificationBar_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction NotificationBar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction NotificationBar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction NotificationBar_createClass(Constructor, protoProps, staticProps) { if (protoProps) NotificationBar_defineProperties(Constructor.prototype, protoProps); if (staticProps) NotificationBar_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction NotificationBar_possibleConstructorReturn(self, call) { if (call && (NotificationBar_typeof(call) === "object" || typeof call === "function")) { return call; } return NotificationBar_assertThisInitialized(self); }\n\nfunction NotificationBar_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction NotificationBar_getPrototypeOf(o) { NotificationBar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return NotificationBar_getPrototypeOf(o); }\n\nfunction NotificationBar_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) NotificationBar_setPrototypeOf(subClass, superClass); }\n\nfunction NotificationBar_setPrototypeOf(o, p) { NotificationBar_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return NotificationBar_setPrototypeOf(o, p); }\n\n\n\n\n\nvar NotificationBar_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  NotificationBar_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    NotificationBar_classCallCheck(this, MDXContent);\n\n    _this = NotificationBar_possibleConstructorReturn(this, NotificationBar_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  NotificationBar_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = NotificationBar_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "NotificationBar"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "NotificationBar"), react_default.a.createElement(build["NotificationBar"], {\n        mb: 1,\n        content: "Oops! There seems to be an error",\n        bg: "error",\n        color: "white"\n      }), react_default.a.createElement(build["NotificationBar"], {\n        mb: 1,\n        content: "Have you saved your work?",\n        bg: "warning",\n        color: "black"\n      }), react_default.a.createElement(build["NotificationBar"], {\n        mb: 1,\n        content: "Oh yes! Settings have been saved",\n        bg: "success",\n        color: "white"\n      }), react_default.a.createElement(build["NotificationBar"], {\n        mb: 1,\n        content: "Oh yes! Settings have been saved",\n        bg: "primary",\n        color: "white",\n        dismissable: false\n      }), react_default.a.createElement(build["NotificationBar"], {\n        boxShadow: 100,\n        m: 3,\n        icon: false,\n        fontSize: "small",\n        content: "W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2018 by Refsnes Data. All Rights Reserved.",\n        bg: "success",\n        color: "white"\n      }));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Pagination.mdx\nfunction Pagination_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Pagination_typeof = function _typeof(obj) { return typeof obj; }; } else { Pagination_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Pagination_typeof(obj); }\n\nfunction Pagination_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Pagination_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Pagination_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Pagination_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Pagination_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Pagination_createClass(Constructor, protoProps, staticProps) { if (protoProps) Pagination_defineProperties(Constructor.prototype, protoProps); if (staticProps) Pagination_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Pagination_possibleConstructorReturn(self, call) { if (call && (Pagination_typeof(call) === "object" || typeof call === "function")) { return call; } return Pagination_assertThisInitialized(self); }\n\nfunction Pagination_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Pagination_getPrototypeOf(o) { Pagination_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Pagination_getPrototypeOf(o); }\n\nfunction Pagination_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Pagination_setPrototypeOf(subClass, superClass); }\n\nfunction Pagination_setPrototypeOf(o, p) { Pagination_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Pagination_setPrototypeOf(o, p); }\n\n\n\n\n\nvar Pagination_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Pagination_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Pagination_classCallCheck(this, MDXContent);\n\n    _this = Pagination_possibleConstructorReturn(this, Pagination_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Pagination_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Pagination_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Pagination"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Pagination"), react_default.a.createElement(build["Pagination"], null), react_default.a.createElement(build["Pagination"], {\n        size: 16\n      }), react_default.a.createElement(build["Pagination"], {\n        size: 32\n      }), react_default.a.createElement(build["Pagination"], {\n        type: "numbers"\n      }));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/ProgressBar/helpers.js\nfunction helpers_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { helpers_typeof = function _typeof(obj) { return typeof obj; }; } else { helpers_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return helpers_typeof(obj); }\n\nfunction helpers_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction helpers_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction helpers_createClass(Constructor, protoProps, staticProps) { if (protoProps) helpers_defineProperties(Constructor.prototype, protoProps); if (staticProps) helpers_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction helpers_possibleConstructorReturn(self, call) { if (call && (helpers_typeof(call) === "object" || typeof call === "function")) { return call; } return helpers_assertThisInitialized(self); }\n\nfunction helpers_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction helpers_getPrototypeOf(o) { helpers_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return helpers_getPrototypeOf(o); }\n\nfunction helpers_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) helpers_setPrototypeOf(subClass, superClass); }\n\nfunction helpers_setPrototypeOf(o, p) { helpers_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return helpers_setPrototypeOf(o, p); }\n\n\n\n\nvar helpers_Slider = function Slider(_ref) {\n  var onChange = _ref.onChange,\n      amount = _ref.amount;\n  return react_default.a.createElement(react["Fragment"], null, react_default.a.createElement("input", {\n    type: "range",\n    style: {\n      width: \'100%\'\n    },\n    step: "1",\n    value: amount,\n    onChange: onChange,\n    list: "tickmarks"\n  }), react_default.a.createElement("datalist", {\n    id: "tickmarks"\n  }, react_default.a.createElement("option", {\n    value: "0"\n  }), react_default.a.createElement("option", {\n    value: "10"\n  }), react_default.a.createElement("option", {\n    value: "20"\n  }), react_default.a.createElement("option", {\n    value: "30"\n  }), react_default.a.createElement("option", {\n    value: "40"\n  }), react_default.a.createElement("option", {\n    value: "50"\n  }), react_default.a.createElement("option", {\n    value: "60"\n  }), react_default.a.createElement("option", {\n    value: "70"\n  }), react_default.a.createElement("option", {\n    value: "80"\n  }), react_default.a.createElement("option", {\n    value: "90"\n  }), react_default.a.createElement("option", {\n    value: "100"\n  })));\n};\n\nvar helpers_StatefulExample =\n/*#__PURE__*/\nfunction (_React$Component) {\n  helpers_inherits(StatefulExample, _React$Component);\n\n  function StatefulExample() {\n    var _this;\n\n    helpers_classCallCheck(this, StatefulExample);\n\n    _this = helpers_possibleConstructorReturn(this, helpers_getPrototypeOf(StatefulExample).call(this));\n    _this.state = {\n      amount: 62\n    };\n    return _this;\n  }\n\n  helpers_createClass(StatefulExample, [{\n    key: "onChange",\n    value: function onChange(event) {\n      this.setState({\n        amount: parseInt(event.target.value, 10)\n      });\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var amount = this.state.amount;\n      var _this$props = this.props,\n          innerBg = _this$props.innerBg,\n          outerBg = _this$props.outerBg,\n          borderRadius = _this$props.borderRadius,\n          p = _this$props.p,\n          fontSize = _this$props.fontSize,\n          showNumber = _this$props.showNumber,\n          minHeight = _this$props.minHeight,\n          color = _this$props.color;\n      return react_default.a.createElement(build["Box"], {\n        mt: 3\n      }, react_default.a.createElement(helpers_Slider, {\n        onChange: this.onChange.bind(this),\n        amount: amount\n      }), react_default.a.createElement(build["ProgressBar"], {\n        color: color,\n        p: p,\n        innerBg: innerBg,\n        outerBg: outerBg,\n        amount: amount,\n        borderRadius: borderRadius,\n        fontSize: fontSize,\n        showNumber: showNumber,\n        minHeight: minHeight\n      }));\n    }\n  }]);\n\n  return StatefulExample;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/ProgressBar/index.mdx\nfunction ProgressBar_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { ProgressBar_typeof = function _typeof(obj) { return typeof obj; }; } else { ProgressBar_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return ProgressBar_typeof(obj); }\n\nfunction ProgressBar_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = ProgressBar_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction ProgressBar_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction ProgressBar_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction ProgressBar_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction ProgressBar_createClass(Constructor, protoProps, staticProps) { if (protoProps) ProgressBar_defineProperties(Constructor.prototype, protoProps); if (staticProps) ProgressBar_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction ProgressBar_possibleConstructorReturn(self, call) { if (call && (ProgressBar_typeof(call) === "object" || typeof call === "function")) { return call; } return ProgressBar_assertThisInitialized(self); }\n\nfunction ProgressBar_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction ProgressBar_getPrototypeOf(o) { ProgressBar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return ProgressBar_getPrototypeOf(o); }\n\nfunction ProgressBar_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) ProgressBar_setPrototypeOf(subClass, superClass); }\n\nfunction ProgressBar_setPrototypeOf(o, p) { ProgressBar_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return ProgressBar_setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar ProgressBar_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  ProgressBar_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    ProgressBar_classCallCheck(this, MDXContent);\n\n    _this = ProgressBar_possibleConstructorReturn(this, ProgressBar_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  ProgressBar_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = ProgressBar_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "ProgressBar"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "ProgressBar"), react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, "Note: the sliders included below are to simulate the changing progress of the ", react_default.a.createElement(dist["MDXTag"], {\n        name: "inlineCode",\n        components: components,\n        parentName: "p"\n      }, "ProgressBar"), "."), react_default.a.createElement(build["Box"], {\n        width: 1 / 3\n      }, react_default.a.createElement(helpers_StatefulExample, {\n        innerBg: "primary"\n      }), react_default.a.createElement(helpers_StatefulExample, {\n        innerBg: "tertiary",\n        borderRadius: "large"\n      }), react_default.a.createElement(helpers_StatefulExample, {\n        innerBg: "success",\n        color: "white",\n        p: 1,\n        fontSize: "body",\n        borderRadius: "large"\n      }), react_default.a.createElement(helpers_StatefulExample, {\n        innerBg: "primary",\n        p: 1,\n        borderRadius: "none"\n      }), react_default.a.createElement(helpers_StatefulExample, {\n        innerBg: "primary",\n        fontSize: "uber"\n      }), react_default.a.createElement(helpers_StatefulExample, {\n        innerBg: "primary",\n        showNumber: false,\n        minHeight: 20\n      })));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Tabs.mdx\nfunction Tabs_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Tabs_typeof = function _typeof(obj) { return typeof obj; }; } else { Tabs_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Tabs_typeof(obj); }\n\nfunction Tabs_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Tabs_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Tabs_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Tabs_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Tabs_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Tabs_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tabs_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tabs_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Tabs_possibleConstructorReturn(self, call) { if (call && (Tabs_typeof(call) === "object" || typeof call === "function")) { return call; } return Tabs_assertThisInitialized(self); }\n\nfunction Tabs_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Tabs_getPrototypeOf(o) { Tabs_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Tabs_getPrototypeOf(o); }\n\nfunction Tabs_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Tabs_setPrototypeOf(subClass, superClass); }\n\nfunction Tabs_setPrototypeOf(o, p) { Tabs_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Tabs_setPrototypeOf(o, p); }\n\n\n\n\n\n\nvar Tabs_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Tabs_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Tabs_classCallCheck(this, MDXContent);\n\n    _this = Tabs_possibleConstructorReturn(this, Tabs_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Tabs_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Tabs_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Tabs"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Tabs"), react_default.a.createElement(build["Tabs"], null, react_default.a.createElement("div", {\n        label: "News"\n      }, "See ya later, ", react_default.a.createElement("em", null, "Alligator"), "!"), react_default.a.createElement("div", {\n        label: "Store"\n      }, "After \'while, ", react_default.a.createElement("em", null, "Crocodile"), "!"), react_default.a.createElement("div", {\n        label: "Videos"\n      }, "Nothing to see here, this tab is ", react_default.a.createElement("em", null, "extinct"), "!"), react_default.a.createElement("div", {\n        label: "Photos"\n      }, "Nothing to see here, this tab is ", react_default.a.createElement("em", null, "extinct"), "!")), react_default.a.createElement(build["HeadingTwo"], {\n        fontSize: "h5",\n        mt: 6\n      }, "With Icon"), react_default.a.createElement(build["Tabs"], null, react_default.a.createElement("div", {\n        label: "Store",\n        tabIcon: react_default.a.createElement(dist_es5["IconCart"], null)\n      }, "Shopping cart!"), react_default.a.createElement("div", {\n        label: "Videos",\n        tabIcon: react_default.a.createElement(dist_es5["IconVideo"], null)\n      }, "Check out videos"), react_default.a.createElement("div", {\n        label: "Photos",\n        tabIcon: react_default.a.createElement(dist_es5["IconCamera"], null)\n      }, "See all photos")));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Text.mdx\nfunction Text_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Text_typeof = function _typeof(obj) { return typeof obj; }; } else { Text_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Text_typeof(obj); }\n\nfunction Text_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Text_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Text_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Text_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Text_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Text_createClass(Constructor, protoProps, staticProps) { if (protoProps) Text_defineProperties(Constructor.prototype, protoProps); if (staticProps) Text_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Text_possibleConstructorReturn(self, call) { if (call && (Text_typeof(call) === "object" || typeof call === "function")) { return call; } return Text_assertThisInitialized(self); }\n\nfunction Text_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Text_getPrototypeOf(o) { Text_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Text_getPrototypeOf(o); }\n\nfunction Text_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Text_setPrototypeOf(subClass, superClass); }\n\nfunction Text_setPrototypeOf(o, p) { Text_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Text_setPrototypeOf(o, p); }\n\n\n\n\n\nvar Text_Content = function Content(_ref) {\n  var fontFamily = _ref.fontFamily;\n  return react_default.a.createElement("div", null, react_default.a.createElement(build["UberText"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "Uber"), react_default.a.createElement(build["UberText"], {\n    fontFamily: fontFamily\n  }, "Uber"), react_default.a.createElement(build["HeroText"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "Hero"), react_default.a.createElement(build["HeroText"], {\n    fontFamily: fontFamily\n  }, "Hero"), react_default.a.createElement(build["HeadingOne"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "H1 Heading"), react_default.a.createElement(build["HeadingOne"], {\n    fontFamily: fontFamily\n  }, "H1 Heading"), react_default.a.createElement(build["HeadingTwo"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "H2 Heading"), react_default.a.createElement(build["HeadingTwo"], {\n    fontFamily: fontFamily\n  }, "H2 Heading"), react_default.a.createElement(build["HeadingThree"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "H3 Heading"), react_default.a.createElement(build["HeadingThree"], {\n    fontFamily: fontFamily\n  }, "H3 Heading"), react_default.a.createElement(build["HeadingFour"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "H4 Heading"), react_default.a.createElement(build["HeadingFour"], {\n    fontFamily: fontFamily\n  }, "H4 Heading"), react_default.a.createElement(build["HeadingFive"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "H5 Heading"), react_default.a.createElement(build["HeadingFive"], {\n    fontFamily: fontFamily\n  }, "H5 Heading"), react_default.a.createElement(build["LeadText"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "Lead"), react_default.a.createElement(build["LeadText"], {\n    fontFamily: fontFamily\n  }, "Lead"), react_default.a.createElement(build["BodyText"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "Body"), react_default.a.createElement(build["BodyText"], {\n    fontFamily: fontFamily\n  }, "Body"), react_default.a.createElement(build["SmallText"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "Small"), react_default.a.createElement(build["SmallText"], {\n    fontFamily: fontFamily\n  }, "Small"), react_default.a.createElement(build["CaptionText"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "Caption"), react_default.a.createElement(build["CaptionText"], {\n    fontFamily: fontFamily\n  }, "Caption"), react_default.a.createElement(build["TinyText"], {\n    fontWeight: "bold",\n    fontFamily: fontFamily\n  }, "Tiny"), react_default.a.createElement(build["TinyText"], {\n    fontFamily: fontFamily\n  }, "Tiny"));\n};\n\nvar Text_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Text_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Text_classCallCheck(this, MDXContent);\n\n    _this = Text_possibleConstructorReturn(this, Text_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Text_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Text_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Text"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Text"), react_default.a.createElement("div", {\n        style: {\n          display: \'flex\',\n          flexWrap: \'wrap\'\n        }\n      }, react_default.a.createElement("div", null, react_default.a.createElement(build["HeadingOne"], {\n        color: "secondary"\n      }, "Font Family #1"), react_default.a.createElement(Text_Content, null)), react_default.a.createElement("div", null, react_default.a.createElement(build["HeadingOne"], {\n        color: "primary"\n      }, "Font Family #2"), react_default.a.createElement(Text_Content, {\n        fontFamily: "alt"\n      }))));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/components/DocLabel.js\nfunction DocLabel_templateObject() {\n  var data = DocLabel_taggedTemplateLiteral(["\\n  color: black;\\n  ", ";\\n  display: block;\\n  text-align: center;\\n  font-size: 10px;\\n  border-radius: 3px;\\n  border: 1px solid lightgrey;\\n  text-transform: uppercase;\\n  ", ";\\n"]);\n\n  DocLabel_templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction DocLabel_taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }\n\n\n\nvar DocLabel = styled_components_browser_esm["default"].label(DocLabel_templateObject(), index_esm["fontFamily"], index_esm["space"]);\nDocLabel.defaultProps = {\n  fontFamily: \'default\',\n  px: 1\n};\n/* harmony default export */ var components_DocLabel = (DocLabel);\n// CONCATENATED MODULE: ./src/docs/Tooltip.mdx\nfunction Tooltip_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Tooltip_typeof = function _typeof(obj) { return typeof obj; }; } else { Tooltip_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Tooltip_typeof(obj); }\n\nfunction Tooltip_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Tooltip_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Tooltip_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Tooltip_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Tooltip_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Tooltip_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tooltip_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tooltip_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Tooltip_possibleConstructorReturn(self, call) { if (call && (Tooltip_typeof(call) === "object" || typeof call === "function")) { return call; } return Tooltip_assertThisInitialized(self); }\n\nfunction Tooltip_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Tooltip_getPrototypeOf(o) { Tooltip_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Tooltip_getPrototypeOf(o); }\n\nfunction Tooltip_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Tooltip_setPrototypeOf(subClass, superClass); }\n\nfunction Tooltip_setPrototypeOf(o, p) { Tooltip_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Tooltip_setPrototypeOf(o, p); }\n\nfunction Tooltip_extends() { Tooltip_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Tooltip_extends.apply(this, arguments); }\n\n\n\n\n\nvar baseProps = {\n  fontFamily: \'default\',\n  content: \'Here is my tooltip!\',\n  bg: \'primary\',\n  color: \'papayawhip\',\n  mx: 2,\n  my: 8\n};\n\nvar Tooltip_BaseTooltip = function BaseTooltip(otherProps) {\n  return react_default.a.createElement(build["Tooltip"], Tooltip_extends({}, baseProps, otherProps));\n};\n\nvar Tooltip_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Tooltip_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Tooltip_classCallCheck(this, MDXContent);\n\n    _this = Tooltip_possibleConstructorReturn(this, Tooltip_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Tooltip_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Tooltip_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Tooltip"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Tooltip"), react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, "Hover over the labels below to see the tooltips."), react_default.a.createElement(Tooltip_BaseTooltip, null, react_default.a.createElement(components_DocLabel, null, "Default")), react_default.a.createElement(Tooltip_BaseTooltip, {\n        placement: "top",\n        bg: "warning",\n        color: "secondary"\n      }, react_default.a.createElement(components_DocLabel, null, "Top")), react_default.a.createElement(Tooltip_BaseTooltip, {\n        placement: "right"\n      }, react_default.a.createElement(components_DocLabel, null, "Right")), react_default.a.createElement(Tooltip_BaseTooltip, {\n        placement: "bottom"\n      }, react_default.a.createElement(components_DocLabel, null, "Bottom")), react_default.a.createElement(Tooltip_BaseTooltip, {\n        placement: "left"\n      }, react_default.a.createElement(components_DocLabel, null, "Left")));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Chip.mdx\nfunction Chip_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Chip_typeof = function _typeof(obj) { return typeof obj; }; } else { Chip_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Chip_typeof(obj); }\n\nfunction Chip_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Chip_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Chip_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Chip_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Chip_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Chip_createClass(Constructor, protoProps, staticProps) { if (protoProps) Chip_defineProperties(Constructor.prototype, protoProps); if (staticProps) Chip_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Chip_possibleConstructorReturn(self, call) { if (call && (Chip_typeof(call) === "object" || typeof call === "function")) { return call; } return Chip_assertThisInitialized(self); }\n\nfunction Chip_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Chip_getPrototypeOf(o) { Chip_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Chip_getPrototypeOf(o); }\n\nfunction Chip_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Chip_setPrototypeOf(subClass, superClass); }\n\nfunction Chip_setPrototypeOf(o, p) { Chip_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Chip_setPrototypeOf(o, p); }\n\n\n\n\n\nvar Chip_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Chip_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Chip_classCallCheck(this, MDXContent);\n\n    _this = Chip_possibleConstructorReturn(this, Chip_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Chip_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Chip_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Chips"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Chips"), react_default.a.createElement(build["Chip"], {\n        mr: 1,\n        text: "Jack White"\n      }), react_default.a.createElement(build["Chip"], {\n        mr: 1,\n        text: "Adele",\n        dismissable: true\n      }), react_default.a.createElement(build["Chip"], {\n        mr: 1,\n        bg: "secondary",\n        text: "Freddie Mercury",\n        dismissable: true\n      }), react_default.a.createElement(build["Chip"], {\n        mr: 1,\n        bg: "tertiary",\n        text: "Thom Yorke"\n      }), react_default.a.createElement(build["Chip"], {\n        mr: 1,\n        text: "Duran Duran",\n        avatarUrl: "https://images.pexels.com/photos/109243/pexels-photo-109243.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260"\n      }));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Tags.mdx\nfunction Tags_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Tags_typeof = function _typeof(obj) { return typeof obj; }; } else { Tags_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Tags_typeof(obj); }\n\nfunction Tags_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Tags_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Tags_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Tags_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Tags_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Tags_createClass(Constructor, protoProps, staticProps) { if (protoProps) Tags_defineProperties(Constructor.prototype, protoProps); if (staticProps) Tags_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Tags_possibleConstructorReturn(self, call) { if (call && (Tags_typeof(call) === "object" || typeof call === "function")) { return call; } return Tags_assertThisInitialized(self); }\n\nfunction Tags_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Tags_getPrototypeOf(o) { Tags_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Tags_getPrototypeOf(o); }\n\nfunction Tags_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Tags_setPrototypeOf(subClass, superClass); }\n\nfunction Tags_setPrototypeOf(o, p) { Tags_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Tags_setPrototypeOf(o, p); }\n\n\n\n\n\nvar Tags_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Tags_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Tags_classCallCheck(this, MDXContent);\n\n    _this = Tags_possibleConstructorReturn(this, Tags_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Tags_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Tags_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Tags"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Tags"), react_default.a.createElement(build["Tag"], {\n        mr: 1,\n        text: "Jack White"\n      }), react_default.a.createElement(build["Tag"], {\n        mr: 1,\n        text: "Adele",\n        dismissable: true\n      }), react_default.a.createElement(build["Tag"], {\n        mr: 1,\n        bg: "secondary",\n        text: "Freddie Mercury",\n        dismissable: true\n      }), react_default.a.createElement(build["Tag"], {\n        mr: 1,\n        bg: "tertiary",\n        text: "Thom Yorke"\n      }), react_default.a.createElement(build["Tag"], {\n        mr: 1,\n        text: "Duran Duran",\n        avatarUrl: "https://images.pexels.com/photos/109243/pexels-photo-109243.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260"\n      }));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/docs/Avatars.mdx\nfunction Avatars_typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { Avatars_typeof = function _typeof(obj) { return typeof obj; }; } else { Avatars_typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return Avatars_typeof(obj); }\n\nfunction Avatars_objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = Avatars_objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction Avatars_objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction Avatars_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction Avatars_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction Avatars_createClass(Constructor, protoProps, staticProps) { if (protoProps) Avatars_defineProperties(Constructor.prototype, protoProps); if (staticProps) Avatars_defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction Avatars_possibleConstructorReturn(self, call) { if (call && (Avatars_typeof(call) === "object" || typeof call === "function")) { return call; } return Avatars_assertThisInitialized(self); }\n\nfunction Avatars_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction Avatars_getPrototypeOf(o) { Avatars_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return Avatars_getPrototypeOf(o); }\n\nfunction Avatars_inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) Avatars_setPrototypeOf(subClass, superClass); }\n\nfunction Avatars_setPrototypeOf(o, p) { Avatars_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return Avatars_setPrototypeOf(o, p); }\n\nfunction Avatars_extends() { Avatars_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return Avatars_extends.apply(this, arguments); }\n\n\n\n\n\nvar demoSrc = \'https://images.pexels.com/photos/109243/pexels-photo-109243.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260\';\n\nvar Avatars_Label = function Label(props) {\n  return react_default.a.createElement(components_DocLabel, Avatars_extends({\n    mr: 1,\n    mt: 2\n  }, props));\n};\n\nvar Avatars_MDXContent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  Avatars_inherits(MDXContent, _React$Component);\n\n  function MDXContent(props) {\n    var _this;\n\n    Avatars_classCallCheck(this, MDXContent);\n\n    _this = Avatars_possibleConstructorReturn(this, Avatars_getPrototypeOf(MDXContent).call(this, props));\n    _this.layout = null;\n    return _this;\n  }\n\n  Avatars_createClass(MDXContent, [{\n    key: "render",\n    value: function render() {\n      var _this$props = this.props,\n          components = _this$props.components,\n          props = Avatars_objectWithoutProperties(_this$props, ["components"]);\n\n      return react_default.a.createElement(dist["MDXTag"], {\n        name: "wrapper",\n        components: components\n      }, react_default.a.createElement(dist["MDXTag"], {\n        name: "p",\n        components: components\n      }, react_default.a.createElement("a", {\n        id: "Avatars"\n      })), react_default.a.createElement(dist["MDXTag"], {\n        name: "h1",\n        components: components\n      }, "Avatars"), react_default.a.createElement("div", {\n        style: {\n          display: \'flex\',\n          alignItems: \'flex-end\'\n        }\n      }, react_default.a.createElement("div", null, react_default.a.createElement(build["Avatar"], {\n        mx: 2,\n        size: "jumbo",\n        src: demoSrc\n      }), react_default.a.createElement(Avatars_Label, null, "Jumbo")), react_default.a.createElement("div", null, react_default.a.createElement(build["Avatar"], {\n        mx: 2,\n        size: "large",\n        src: demoSrc\n      }), react_default.a.createElement(Avatars_Label, null, "Large")), react_default.a.createElement("div", null, react_default.a.createElement(build["Avatar"], {\n        mx: 2,\n        size: "medium",\n        src: demoSrc\n      }), react_default.a.createElement(Avatars_Label, null, "Medium")), react_default.a.createElement("div", null, react_default.a.createElement(build["Avatar"], {\n        mx: 2,\n        size: "small",\n        src: demoSrc\n      }), react_default.a.createElement(Avatars_Label, null, "Small"))));\n    }\n  }]);\n\n  return MDXContent;\n}(react_default.a.Component);\n\n\n// CONCATENATED MODULE: ./src/pages/ComponentLibrary.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return StyleGuide; });\nfunction ComponentLibrary_extends() { ComponentLibrary_extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return ComponentLibrary_extends.apply(this, arguments); }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar ComponentLibrary_H1 = function H1(props) {\n  return react_default.a.createElement(build["HeadingThree"], ComponentLibrary_extends({\n    is: "h1",\n    pt: 12,\n    mb: 2,\n    style: {\n      display: \'block\',\n      borderBottom: \'1px solid lightgrey\'\n    }\n  }, props));\n};\n\nvar ComponentLibrary_H2 = function H2(props) {\n  return react_default.a.createElement(build["HeadingFive"], ComponentLibrary_extends({\n    is: "h2",\n    my: 2\n  }, props));\n};\n\nvar ComponentLibrary_DocsText = function DocsText(props) {\n  return react_default.a.createElement(build["BodyText"], ComponentLibrary_extends({\n    pb: 2\n  }, props));\n};\n\nvar ComponentLibrary_components = {\n  h1: ComponentLibrary_H1,\n  h2: ComponentLibrary_H2,\n  p: ComponentLibrary_DocsText //   // ...\n  //   code: Pre,\n  //   inlineCode: Code\n\n};\nfunction StyleGuide() {\n  return react_default.a.createElement(dist["MDXProvider"], {\n    components: ComponentLibrary_components\n  }, react_default.a.createElement(build["Box"], {\n    display: "flex"\n  }, react_default.a.createElement(DocsNav, null), react_default.a.createElement(build["Box"], {\n    ml: 246,\n    maxWidth: 1000,\n    px: 4\n  }, react_default.a.createElement(build["HeadingOne"], {\n    mt: 3\n  }, "Component Library"), react_default.a.createElement(Avatars_MDXContent, null), react_default.a.createElement(Button_MDXContent, null), react_default.a.createElement(Card_MDXContent, null), react_default.a.createElement(Chip_MDXContent, null), react_default.a.createElement(Forms_MDXContent, null), react_default.a.createElement(Icon_MDXContent, null), react_default.a.createElement(NotificationBar_MDXContent, null), react_default.a.createElement(Pagination_MDXContent, null), react_default.a.createElement(ProgressBar_MDXContent, null), react_default.a.createElement(Tabs_MDXContent, null), react_default.a.createElement(Tags_MDXContent, null), react_default.a.createElement(Text_MDXContent, null), react_default.a.createElement(Tooltip_MDXContent, null))));\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///479\n')}}]);